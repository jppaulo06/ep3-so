!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/jppaulo/Documents/USP/SO/ep3-so/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
BLOCK_SIZE	ep3.c	/^#define BLOCK_SIZE /;"	d	file:
BUILT_IN_COMMAND	ep3.c	/^#define BUILT_IN_COMMAND /;"	d	file:
BUILT_IN_COMMAND	new-shell.c	/^#define BUILT_IN_COMMAND /;"	d	file:
BYTE_SIZE_IN_BITS	ep3.c	/^#define BYTE_SIZE_IN_BITS /;"	d	file:
CD_COMMAND	ep3.c	/^#define CD_COMMAND /;"	d	file:
CD_COMMAND	new-shell.c	/^#define CD_COMMAND /;"	d	file:
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra$/;"	m
CREATE_DIR_COMMAND	ep3.c	/^#define CREATE_DIR_COMMAND /;"	d	file:
DEBUG_MODE	ep3.c	/^#define DEBUG_MODE /;"	d	file:
DEBUG_MODE	new-shell.c	/^#define DEBUG_MODE /;"	d	file:
DEFAULT_COMMAND	ep3.c	/^#define DEFAULT_COMMAND /;"	d	file:
DEFAULT_COMMAND	new-shell.c	/^#define DEFAULT_COMMAND /;"	d	file:
DEFAULT_DISK_SIZE	ep3.c	/^#define DEFAULT_DISK_SIZE /;"	d	file:
DIR_CREATION_TIME_SIZE	ep3.c	/^#define DIR_CREATION_TIME_SIZE /;"	d	file:
DIR_DIR_TYPE	ep3.c	/^#define DIR_DIR_TYPE /;"	d	file:
DIR_ENTRIES_AMOUNT_SIZE	ep3.c	/^#define DIR_ENTRIES_AMOUNT_SIZE /;"	d	file:
DIR_ENTRY_BLOCK_INDEX_SIZE	ep3.c	/^#define DIR_ENTRY_BLOCK_INDEX_SIZE /;"	d	file:
DIR_ENTRY_SIZE	ep3.c	/^#define DIR_ENTRY_SIZE /;"	d	file:
DIR_ENTRY_SIZE_SIZE	ep3.c	/^#define DIR_ENTRY_SIZE_SIZE /;"	d	file:
DIR_FILE_TYPE	ep3.c	/^#define DIR_FILE_TYPE /;"	d	file:
DIR_MODIFICATION_TIME_SIZE	ep3.c	/^#define DIR_MODIFICATION_TIME_SIZE /;"	d	file:
DIR_NAME_SIZE	ep3.c	/^#define DIR_NAME_SIZE /;"	d	file:
DIR_TYPE_SIZE	ep3.c	/^#define DIR_TYPE_SIZE /;"	d	file:
FAT_FREE_BLOCK	ep3.c	/^#define FAT_FREE_BLOCK /;"	d	file:
FAT_INDEX_SIZE	ep3.c	/^#define FAT_INDEX_SIZE /;"	d	file:
FAT_LAST_BLOCK	ep3.c	/^#define FAT_LAST_BLOCK /;"	d	file:
MAX_ARGS_SIZE	ep3.c	/^#define MAX_ARGS_SIZE /;"	d	file:
MAX_ARGS_SIZE	new-shell.c	/^#define MAX_ARGS_SIZE /;"	d	file:
MAX_BITMAP_SIZE	ep3.c	/^#define MAX_BITMAP_SIZE /;"	d	file:
MAX_DIR_DEPTH	ep3.c	/^#define MAX_DIR_DEPTH /;"	d	file:
MAX_DISK_SIZE	ep3.c	/^#define MAX_DISK_SIZE /;"	d	file:
MAX_PROMPT_SIZE	new-shell.c	/^#define MAX_PROMPT_SIZE /;"	d	file:
MAX_USERNAME_SIZE	new-shell.c	/^#define MAX_USERNAME_SIZE /;"	d	file:
META_BITMAP_INDEX	ep3.c	/^#define META_BITMAP_INDEX /;"	d	file:
META_BLOCK_AMOUNT	ep3.c	/^#define META_BLOCK_AMOUNT /;"	d	file:
META_CREATION_TIME	ep3.c	/^#define META_CREATION_TIME /;"	d	file:
META_DATA_INDEX	ep3.c	/^#define META_DATA_INDEX /;"	d	file:
META_DISK_SIZE	ep3.c	/^#define META_DISK_SIZE /;"	d	file:
META_FAT_INDEX	ep3.c	/^#define META_FAT_INDEX /;"	d	file:
META_ROOT_INDEX	ep3.c	/^#define META_ROOT_INDEX /;"	d	file:
META_SIZE	ep3.c	/^#define META_SIZE /;"	d	file:
MOUNT_COMMAND	ep3.c	/^#define MOUNT_COMMAND /;"	d	file:
RM_COMMAND	new-shell.c	/^#define RM_COMMAND /;"	d	file:
TODO_COMMAND	ep3.c	/^#define TODO_COMMAND(/;"	d	file:
UNAME_A_COMMAND	new-shell.c	/^#define UNAME_A_COMMAND /;"	d	file:
WORD_SIZE	ep3.c	/^#define WORD_SIZE /;"	d	file:
_execute_command	ep3.c	/^int _execute_command(struct disk* disk, u32 command_flags, char* command, char** args) {$/;"	f	typeref:typename:int
_execute_command	new-shell.c	/^int _execute_command(u32 command_flags, char* command, char** args) {$/;"	f	typeref:typename:int
all	Makefile	/^all: ep3$/;"	t
bitmap	ep3.c	/^	u32 bitmap[MAX_BITMAP_SIZE];$/;"	m	struct:disk	typeref:typename:u32[]	file:
bitmap_index	ep3.c	/^	u32 bitmap_index;$/;"	m	struct:disk	typeref:typename:u32	file:
bitmap_size	ep3.c	/^	u32 bitmap_size;$/;"	m	struct:disk	typeref:typename:u32	file:
block_amount	ep3.c	/^	u32 block_amount;$/;"	m	struct:disk	typeref:typename:u32	file:
build_args	ep3.c	/^void build_args(char* command, char** args) {$/;"	f	typeref:typename:void
build_args	new-shell.c	/^void build_args(char* command, char** args) {$/;"	f	typeref:typename:void
build_prompt	new-shell.c	/^int build_prompt(char* prompt) {$/;"	f	typeref:typename:int
clean	Makefile	/^clean:$/;"	t
create_dir	ep3.c	/^int create_dir(struct disk* disk, char* path) {$/;"	f	typeref:typename:int
create_disk	ep3.c	/^int create_disk(struct disk* disk, char* path) {$/;"	f	typeref:typename:int
creation_time	ep3.c	/^	u32 creation_time;$/;"	m	struct:disk	typeref:typename:u32	file:
data_index	ep3.c	/^	u32 data_index;$/;"	m	struct:disk	typeref:typename:u32	file:
disk	ep3.c	/^struct disk {$/;"	s	file:
ep3	Makefile	/^ep3: ep3.c$/;"	t
err_msg	ep3.c	/^char* err_msg = NULL;$/;"	v	typeref:typename:char *
err_msg	new-shell.c	/^char* err_msg = NULL;$/;"	v	typeref:typename:char *
execute_command	ep3.c	/^int execute_command(struct disk* disk, u32 command_flags, char* command, char** args) {$/;"	f	typeref:typename:int
execute_command	new-shell.c	/^int execute_command(u32 command_flags, char* command, char** args) {$/;"	f	typeref:typename:int
fat_index	ep3.c	/^	u32 fat_index;$/;"	m	struct:disk	typeref:typename:u32	file:
file	ep3.c	/^	FILE* file;$/;"	m	struct:disk	typeref:typename:FILE *	file:
fill_disk_word	ep3.c	/^int fill_disk_word(struct disk* disk, u32 offset, u32 value, u32 amount) {$/;"	f	typeref:typename:int
get_free_block	ep3.c	/^long get_free_block(struct disk* disk) {$/;"	f	typeref:typename:long
get_path_list	ep3.c	/^void get_path_list(char* path, char** path_list, u32* path_list_size) {$/;"	f	typeref:typename:void
get_username	new-shell.c	/^int get_username(char* username) {$/;"	f	typeref:typename:int
i	ep3.c	/^	u32 i = block \/ BYTE_SIZE_IN_BITS;$/;"	v	typeref:typename:u32
init_metadata	ep3.c	/^void init_metadata(struct disk* disk) {$/;"	f	typeref:typename:void
j	ep3.c	/^	u32 j = block % BYTE_SIZE_IN_BITS;$/;"	v	typeref:typename:u32
main	ep3.c	/^int main()$/;"	f	typeref:typename:int
main	new-shell.c	/^int main()$/;"	f	typeref:typename:int
mounted	ep3.c	/^	bool mounted;$/;"	m	struct:disk	typeref:typename:bool	file:
nearest_multiple_from_divisor	ep3.c	/^u32 nearest_multiple_from_divisor(u32 value, u32 divisor) {$/;"	f	typeref:typename:u32
parse_command	ep3.c	/^void parse_command(char* command_line, char** command, char** args, u32 *command_flags) {$/;"	f	typeref:typename:void
parse_command	new-shell.c	/^void parse_command(char* command_line, char** command, char** args, u32 *command_flags) {$/;"	f	typeref:typename:void
parse_disk	ep3.c	/^int parse_disk(struct disk* disk, char* path) {$/;"	f	typeref:typename:int
path	ep3.c	/^	char* path;$/;"	m	struct:disk	typeref:typename:char *	file:
print_error	ep3.c	/^#define print_error(/;"	d	file:
print_error	new-shell.c	/^#define print_error(/;"	d	file:
print_info	ep3.c	/^#define print_info(/;"	d	file:
print_info	new-shell.c	/^#define print_info(/;"	d	file:
print_info_disk_meta	ep3.c	/^void print_info_disk_meta(struct disk* disk) {$/;"	f	typeref:typename:void
read_bitmap	ep3.c	/^int read_bitmap(struct disk* disk) {$/;"	f	typeref:typename:int
read_command_line	ep3.c	/^int read_command_line(char** command_line, char* prompt) {$/;"	f	typeref:typename:int
read_command_line	new-shell.c	/^int read_command_line(char** command_line, char* prompt) {$/;"	f	typeref:typename:int
read_disk	ep3.c	/^int read_disk(char* path, struct disk* disk) {$/;"	f	typeref:typename:int
read_metadata	ep3.c	/^int read_metadata(struct disk* disk) {$/;"	f	typeref:typename:int
root_index	ep3.c	/^	u32 root_index;$/;"	m	struct:disk	typeref:typename:u32	file:
search_dir_index	ep3.c	/^long search_dir_index(struct disk* disk, char** path_list, u32 depth) {$/;"	f	typeref:typename:long
size	ep3.c	/^	u32 size;$/;"	m	struct:disk	typeref:typename:u32	file:
u32	ep3.c	/^#define u32 /;"	d	file:
u32	new-shell.c	/^#define u32 /;"	d	file:
u64	ep3.c	/^#define u64 /;"	d	file:
u64	new-shell.c	/^#define u64 /;"	d	file:
update_bitmap	ep3.c	/^int update_bitmap(struct disk* disk) {$/;"	f	typeref:typename:int
write_metadata	ep3.c	/^int write_metadata(struct disk* disk) {$/;"	f	typeref:typename:int
write_to_disk	ep3.c	/^int write_to_disk(struct disk* disk, u32 index, void* data, u32 size) {$/;"	f	typeref:typename:int
